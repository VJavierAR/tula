<odoo>
    <data>
        <record id="count_location" model="ir.cron">
            <field name="name">Crm expired</field>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field eval="False" name="doall"/>
            <field eval="True" name="active"/>
            <field name="model_id" ref="crm.model_crm_lead" />
            <field name="state">code</field>
            <field name="code">

sta = env.ref('crm.stage_lead4')
op = model.search([['stage_id','!=',sta.id]])
for aa in op:
    aa.cron_validate_lost()
"""
sta = env.ref('crm.stage_lead4')
op = model.search([['stage_id','!=',sta.id],['conexis','=', True]])
op2 = model.search([['stage_id','!=',sta.id],['conexis','=', False]])
fecha = datetime.datetime.now()
for aa in op2:
    if(abs((fecha-aa.write_date).days) >= 180):
        aa.write({'active':False, 'probability':0, 'description': str(aa._origin.write_date)})
        env.cr.execute("update crm_lead set write_date = '" + str(aa._origin.write_date) + "' where  id = " + str(aa.id) + ";")
for a in op:
    if(abs((fecha-a.write_date).days) >= 15):
        a.write({'active':False, 'probability':0})
        env.cr.execute("update crm_lead set write_date = '" + str(a._origin.write_date) + "' where  id = " + str(a.id) + ";")
"""
            </field>
        </record>

<record id="group_by_quincena" model="ir.cron">
<field name="name">Crm quincena</field>
<field name="interval_number">1</field>
<field name="interval_type">days</field>
<field name="numbercall">-1</field>
<field eval="False" name="doall"/>
<field eval="True" name="active"/>
<field name="model_id" ref="crm.model_crm_lead" />
<field name="state">code</field>
<field name="code">
model.cron_quincena()
</field>
</record>


    </data>
</odoo>